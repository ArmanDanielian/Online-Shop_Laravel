<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;

class Rate extends Model
{
    use HasFactory;

    protected $guarded = [];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        self::creating(function ($model) {
            if (!$model->user_id) {
                $model->user_id = auth()->id();
            }
        });
    }

    public function user()
    {
        return $this->belongsTo(User::class);
    }

    public function order()
    {
        return $this->belongsTo(Order::class);
    }

    public function product()
    {
        return $this->belongsTo(Product::class);
    }

    public function isSellerRate($rate)
    {
        $sellerShops = $this->shops;
        return $sellerShops->pluck('id')->toArray();
    }

    public function scopeRateFilter($query, $user)
    {
        $query
            ->when($user->isBuyer(), function ($query) use ($user) {
                $query->where('user_id', $user->id);
            });
        $query
            ->when($user->isSeller(), function ($query) use ($user) { # for seller show only those rates that belong to his products
                $shopIds = $user->shops->pluck('id')->toArray();
                $query
                    ->whereHas('product', function ($query) use ($shopIds) { // Co-related subquery
                        $query
                            ->whereIn('shop_id', $shopIds);
                    });
            });
    }
}
